{"version":3,"file":"js/main.bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACO;AACP,+FAA+F,OAAO,aAAa,QAAQ;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACO;AACP,+FAA+F,OAAO,gBAAgB,KAAK;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,aAAa;AACb;;;;;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,uCAAuC;AACpE;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,UAAU,cAAc;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iCAAiC;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,mDAAmD;AAC/E;AACA;AACA;AACA,4BAA4B,kDAAkD;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,4CAA4C,GAAG;AAC7D;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM,GAAG,MAAM,EAAE,0BAA0B,IAAI;AAC7D;AACA,MAAM;AACN;;;;;;;UCvbA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACN4B;AACW;AAKf;AAIC;AACzB;AACA;AACA;AACA;AACA,yBAAyB,6DAAc,CAAC,gDAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gDAAQ;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wEAAwB;AACtD,QAAQ,gDAAQ;AAChB;AACA,IAAI,mEAAoB;AACxB;AACA;AACA,+BAA+B,wEAAwB;AACvD,QAAQ,gDAAQ;AAChB;AACA,IAAI,mEAAoB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://js_weather_app/./src/scss/style.scss?98af","webpack://js_weather_app/./src/js/constants.js","webpack://js_weather_app/./src/js/dataFunctions.js","webpack://js_weather_app/./src/js/domFunctions.js","webpack://js_weather_app/webpack/bootstrap","webpack://js_weather_app/webpack/runtime/define property getters","webpack://js_weather_app/webpack/runtime/hasOwnProperty shorthand","webpack://js_weather_app/webpack/runtime/make namespace object","webpack://js_weather_app/./src/js/main.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export const CITYDATA = [\r\n    {\r\n        city: \"臺北市\",\r\n        station: \"C0AC70\",\r\n    },\r\n    {\r\n        city: \"新北市\",\r\n        station: \"C0AJ80\",\r\n    },\r\n    {\r\n        city: \"桃園市\",\r\n        station: \"C0C480\",\r\n    },\r\n    {\r\n        city: \"臺中市\",\r\n        station: \"C0F9T0\",\r\n    },\r\n    {\r\n        city: \"臺南市\",\r\n        station: \"C0X190\",\r\n    },\r\n    {\r\n        city: \"高雄市\",\r\n        station: \"C0V710\",\r\n    },\r\n    {\r\n        city: \"基隆市\",\r\n        station: \"C0B050\",\r\n    },\r\n    {\r\n        city: \"新竹縣\",\r\n        station: \"C0D650\",\r\n    },\r\n    {\r\n        city: \"新竹市\",\r\n        station: \"C0D660\",\r\n    },\r\n    {\r\n        city: \"宜蘭縣\",\r\n        station: \"C0U940\",\r\n    },\r\n    {\r\n        city: \"苗栗縣\",\r\n        station: \"C0E910\",\r\n    },\r\n    {\r\n        city: \"南投縣\",\r\n        station: \"C0I460\",\r\n    },\r\n    {\r\n        city: \"彰化縣\",\r\n        station: \"C0G910\",\r\n    },\r\n    {\r\n        city: \"雲林縣\",\r\n        station: \"C0K400\",\r\n    },\r\n    {\r\n        city: \"嘉義縣\",\r\n        station: \"C0M680\",\r\n    },\r\n    {\r\n        city: \"嘉義市\",\r\n        station: \"C0M730\",\r\n    },\r\n    {\r\n        city: \"屏東縣\",\r\n        station: \"C0R170\",\r\n    },\r\n    {\r\n        city: \"花蓮縣\",\r\n        station: \"C0T9D0\",\r\n    },\r\n    {\r\n        city: \"臺東縣\",\r\n        station: \"C0SA60\",\r\n    },\r\n    {\r\n        city: \"澎湖縣\",\r\n        station: \"C0W200\",\r\n    },\r\n    {\r\n        city: \"金門縣\",\r\n        station: \"C0W150\",\r\n    },\r\n    {\r\n        city: \"連江縣\",\r\n        station: \"C0W220\",\r\n    },\r\n];\r\n","const APPKEY = \"CWA-B49E3A3B-490C-4BF6-8F0A-8497E4C03255\";\r\n\r\n// 取得自動氣象站 - 氣象觀測資料\r\nexport const getWeatherObserveFromApi = async (station) => {\r\n    const url = `https://opendata.cwa.gov.tw/api/v1/rest/datastore/O-A0001-001?Authorization=${APPKEY}&StationId=${station}`;\r\n\r\n    let data = {};\r\n    let error = \"\";\r\n    try {\r\n        const response = await fetch(url);\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n\r\n        data = await response.json();\r\n    } catch (err) {\r\n        error = err.message;\r\n    }\r\n\r\n    return { data, error };\r\n};\r\n\r\n// 取得臺灣各鄉鎮市區預報資料 - 未來2天(逐3小時)\r\nexport const getHourlyForecastFromApi = async (city) => {\r\n    const url = `https://opendata.cwa.gov.tw/api/v1/rest/datastore/F-D0047-089?Authorization=${APPKEY}&locationName=${city}`;\r\n    const encodedUrl = encodeURI(url);\r\n\r\n    let data = {};\r\n    let error = \"\";\r\n    try {\r\n        const response = await fetch(encodedUrl);\r\n        if (!response.ok) {\r\n            throw new Error(response.statusText);\r\n        }\r\n\r\n        data = await response.json();\r\n    } catch (err) {\r\n        error = err.message;\r\n    }\r\n\r\n    return { data, error };\r\n};\r\n","// variable for draggable slider\r\nlet isDragging = false;\r\nlet hasMove = false;\r\nlet prevX;\r\nlet scrollLeft;\r\n\r\n// 目前呈現預報詳細資料的index\r\nlet prevIndex = 0;\r\n\r\n// hourly forecast data from api\r\nlet forecastData = {};\r\n\r\n// drag start\r\nconst dragStart = (event) => {\r\n    isDragging = true;\r\n    const slider = event.currentTarget;\r\n    slider.classList.add(\"grabbing\");\r\n\r\n    prevX = event.pageX || event.touches[0].pageX;\r\n    scrollLeft = slider.scrollLeft;\r\n};\r\n\r\n// drag end with click\r\nconst dragEnd = (event) => {\r\n    isDragging = false;\r\n    const slider = event.currentTarget;\r\n    slider.classList.remove(\"grabbing\");\r\n    event.preventDefault();\r\n\r\n    // click\r\n    if (!hasMove) {\r\n        const target = event.target;\r\n        handleForecastClick(slider, target);\r\n    }\r\n\r\n    hasMove = false;\r\n};\r\n\r\n// handle drag move\r\nconst dragMove = (event) => {\r\n    if (!isDragging) return;\r\n    // if hasmove not click\r\n    hasMove = true;\r\n    event.preventDefault();\r\n\r\n    const currentX = event.pageX || event.touches[0].pageX;\r\n    const diff = currentX - prevX;\r\n    event.currentTarget.scrollLeft = scrollLeft - diff;\r\n};\r\n\r\n// 處理預報列表按鈕點擊\r\nconst handleForecastClick = (slider, target) => {\r\n    const allButtons = slider.querySelectorAll(\"button\");\r\n\r\n    let currentIndex = prevIndex;\r\n    allButtons.forEach((btn, index) => {\r\n        if (btn.contains(target) && index !== prevIndex) {\r\n            currentIndex = index;\r\n\r\n            // update forecast\r\n            updateWeatherForecast(btn.dataset.index);\r\n        }\r\n    });\r\n\r\n    if (currentIndex !== prevIndex) {\r\n        allButtons.forEach((btn) => {\r\n            btn.classList.remove(\"clicked\");\r\n        });\r\n        allButtons[currentIndex].classList.add(\"clicked\");\r\n        prevIndex = currentIndex;\r\n    }\r\n};\r\n\r\n// 用鍵盤tab在button間移動並以enter執行click\r\nconst handleKeyDown = (event) => {\r\n    if (event.target.tagName !== \"BUTTON\") return;\r\n\r\n    // click\r\n    if (event.code === \"Enter\") {\r\n        const slider = event.currentTarget;\r\n        const target = event.target;\r\n        handleForecastClick(slider, target);\r\n    }\r\n};\r\n\r\n// create element with class name\r\nconst createElem = (tag, className = null) => {\r\n    const elem = document.createElement(tag);\r\n    if (className) {\r\n        elem.classList.add(className);\r\n    }\r\n\r\n    return elem;\r\n};\r\n\r\n// 載入city列表\r\nexport const loadCityOption = (cityData) => {\r\n    // append each city\r\n    const selectOption = createElem(\"div\", \"selectBox__option\");\r\n    cityData.forEach((data) => {\r\n        const btn = createElem(\"button\");\r\n        btn.innerHTML = data.city;\r\n        selectOption.appendChild(btn);\r\n    });\r\n\r\n    // append container\r\n    document.getElementById(\"selectBox\").appendChild(selectOption);\r\n\r\n    return selectOption;\r\n};\r\n\r\n// 處理觀測資料\r\nexport const updateWeatherObserve = (result) => {\r\n    let observeData;\r\n    let { data, error } = result;\r\n\r\n    // handle error\r\n    if (error) {\r\n        weatherObserveError(error);\r\n        return;\r\n    }\r\n\r\n    // check data\r\n    if (data?.records?.Station && data.records.Station.length > 0) {\r\n        const weatherData = data.records.Station[0].WeatherElement;\r\n\r\n        if (\r\n            weatherData &&\r\n            weatherData.AirTemperature !== \"x\" &&\r\n            weatherData.AirTemperature !== -99 &&\r\n            weatherData.Weather !== \"x\" &&\r\n            weatherData.Weather !== \"-99\"\r\n        ) {\r\n            observeData = `${Math.round(weatherData.AirTemperature)}°C ‧ ${\r\n                weatherData.Weather\r\n            }`;\r\n        } else {\r\n            error = \"觀測資料異常或缺值\";\r\n        }\r\n    } else {\r\n        error = \"觀測資料異常或缺值\";\r\n    }\r\n\r\n    if (error) {\r\n        weatherObserveError(error);\r\n        return;\r\n    }\r\n\r\n    weatherObserveDisplay(observeData);\r\n};\r\n\r\n// 觀測資料異常處理\r\nconst weatherObserveError = (error) => {\r\n    const weatherTemp = document.getElementById(\"weatherObserve__temp\");\r\n    const informBtn = weatherTemp.nextElementSibling;\r\n\r\n    weatherTemp.innerHTML = error;\r\n    informBtn.classList.add(\"none\");\r\n};\r\n\r\n// 更新觀測資料\r\nconst weatherObserveDisplay = (data) => {\r\n    const weatherTemp = document.getElementById(\"weatherObserve__temp\");\r\n    const informBtn = weatherTemp.nextElementSibling;\r\n\r\n    weatherTemp.innerHTML = data;\r\n    if (informBtn.classList.contains(\"none\")) {\r\n        informBtn.classList.remove(\"none\");\r\n    }\r\n};\r\n\r\n// 處理預報資料\r\nexport const updateHourlyForecast = (result) => {\r\n    let { data, error } = result;\r\n\r\n    // remove dom\r\n    const hourlyForecast = document.getElementById(\"hourlyForecast\");\r\n    deletehourlyForecast(hourlyForecast);\r\n\r\n    // handle error\r\n    if (error) {\r\n        hourlyForecastError(error);\r\n        return;\r\n    }\r\n\r\n    // if no data\r\n    if (\r\n        !data?.records?.locations[0]?.location ||\r\n        data.records.locations[0].location.length == 0\r\n    ) {\r\n        error = \"預報資料異常或缺值，請稍後再試!\";\r\n        hourlyForecastError(error);\r\n        return;\r\n    }\r\n\r\n    // save forecast data\r\n    forecastData = data.records.locations[0].location[0].weatherElement;\r\n\r\n    // get display data & append\r\n    const buttonDiv = getHourlyForecastDisplay();\r\n    hourlyForecast.appendChild(buttonDiv);\r\n\r\n    // add event listener\r\n    handleListener(buttonDiv);\r\n};\r\n\r\n// remove dom\r\nconst deletehourlyForecast = (hourlyForecast) => {\r\n    if (hourlyForecast.lastElementChild) {\r\n        const prevButtonDiv = hourlyForecast.lastElementChild;\r\n\r\n        prevButtonDiv.removeEventListener(\"mousedown\", dragStart);\r\n        prevButtonDiv.removeEventListener(\"touchstart\", dragStart);\r\n        prevButtonDiv.removeEventListener(\"mousemove\", dragMove);\r\n        prevButtonDiv.removeEventListener(\"touchmove\", dragMove);\r\n        prevButtonDiv.removeEventListener(\"mouseup\", dragEnd);\r\n        prevButtonDiv.removeEventListener(\"touchend\", dragEnd);\r\n        prevButtonDiv.removeEventListener(\"mouseleave\", dragEnd);\r\n        prevButtonDiv.removeEventListener(\"keydown\", handleKeyDown);\r\n\r\n        hourlyForecast.removeChild(prevButtonDiv);\r\n    }\r\n};\r\n\r\n// 處理預報呈現資料\r\nconst getHourlyForecastDisplay = () => {\r\n    const buttonDiv = createElem(\"div\", \"hourlyForecast__buttons\");\r\n    const now = new Date();\r\n\r\n    let buttonCount = 0;\r\n    for (let i = 0; i < forecastData[1].time.length; i++) {\r\n        // 只呈現9筆 當下+未來24小時\r\n        if (buttonCount >= 9) break;\r\n\r\n        // 過去資料跳過\r\n        const endTime = new Date(forecastData[1].time[i].endTime);\r\n        if (endTime.getTime() < now.getTime()) {\r\n            continue;\r\n        }\r\n\r\n        // time\r\n        const startTime = new Date(forecastData[1].time[i].startTime);\r\n        const timeP = createElem(\"p\");\r\n        timeP.innerHTML = getSimpleTime(startTime);\r\n\r\n        // icon\r\n        const icon = getIconDisplay(\r\n            Number(forecastData[1].time[i].elementValue[1].value),\r\n            startTime\r\n        );\r\n\r\n        // temp\r\n        const tempP = createElem(\"p\");\r\n        tempP.innerHTML = `${Math.round(\r\n            forecastData[3].time[i].elementValue[0].value\r\n        )}°C`;\r\n\r\n        // create button\r\n        const btn = createElem(\"button\");\r\n        btn.dataset.index = i;\r\n        btn.append(timeP, icon, tempP);\r\n\r\n        // 預設顯示第一筆\r\n        if (buttonCount === 0) {\r\n            btn.classList.add(\"clicked\");\r\n            updateWeatherForecast(i);\r\n        }\r\n\r\n        buttonCount++;\r\n        buttonDiv.appendChild(btn);\r\n    }\r\n\r\n    return buttonDiv;\r\n};\r\n\r\n// add listener\r\nconst handleListener = (buttonDiv) => {\r\n    buttonDiv.addEventListener(\"mousedown\", dragStart);\r\n    buttonDiv.addEventListener(\"touchstart\", dragStart);\r\n    buttonDiv.addEventListener(\"mousemove\", dragMove);\r\n    buttonDiv.addEventListener(\"touchmove\", dragMove);\r\n    buttonDiv.addEventListener(\"mouseup\", dragEnd);\r\n    buttonDiv.addEventListener(\"touchend\", dragEnd);\r\n    buttonDiv.addEventListener(\"mouseleave\", dragEnd);\r\n    buttonDiv.addEventListener(\"keydown\", handleKeyDown);\r\n};\r\n\r\n// 處理氣象icon\r\nconst getIconDisplay = (code, time) => {\r\n    const isNight = time.getHours() >= 17;\r\n    const icon = createElem(\"i\");\r\n\r\n    if ((code >= 2 && code <= 3) || (code >= 24 && code <= 25)) {\r\n        // 多雲時晴\r\n        if (isNight) {\r\n            icon.classList.add(\"bi\", \"bi-cloud-moon\");\r\n        } else {\r\n            icon.classList.add(\"bi\", \"bi-cloud-sun\");\r\n        }\r\n    } else if ((code >= 4 && code <= 7) || (code >= 26 && code <= 28)) {\r\n        // 多雲時陰\r\n        icon.classList.add(\"bi\", \"bi-clouds\");\r\n    } else if (\r\n        (code >= 8 && code <= 14) ||\r\n        (code >= 19 && code <= 20) ||\r\n        (code >= 29 && code <= 32) ||\r\n        (code >= 38 && code <= 40)\r\n    ) {\r\n        // 雨天\r\n        icon.classList.add(\"bi\", \"bi-cloud-drizzle\");\r\n    } else if (\r\n        (code >= 15 && code <= 18) ||\r\n        (code >= 21 && code <= 22) ||\r\n        (code >= 33 && code <= 36) ||\r\n        code == 41\r\n    ) {\r\n        // 多雲雷陣雨\r\n        icon.classList.add(\"bi\", \"bi-cloud-lightning-rain\");\r\n    } else if (code == 23 || code == 37) {\r\n        // 陰有雨或雪\r\n        icon.classList.add(\"bi\", \"bi-cloud-sleet\");\r\n    } else if (code == 42) {\r\n        // 下雪\r\n        icon.classList.add(\"bi\", \"bi-cloud-snow\");\r\n    } else {\r\n        // 晴天 或任何未在列表的code\r\n        if (isNight) {\r\n            icon.classList.add(\"bi\", \"bi-moon\");\r\n        } else {\r\n            icon.classList.add(\"bi\", \"bi-sun\");\r\n        }\r\n    }\r\n\r\n    return icon;\r\n};\r\n\r\n// 預報資料異常處理\r\nconst hourlyForecastError = (error) => {\r\n    // remove dom\r\n    const weatherForecast = document.getElementById(\"weatherForecast\");\r\n    deleteContent(weatherForecast);\r\n\r\n    // create error element\r\n    const forecastContent = createElem(\"div\", \"weatherForecast__content\");\r\n    const errorP = createElem(\"p\");\r\n    errorP.innerHTML = error;\r\n\r\n    // append\r\n    forecastContent.appendChild(errorP);\r\n    weatherForecast.appendChild(forecastContent);\r\n};\r\n\r\n// 處理預報詳細呈現區塊\r\nconst updateWeatherForecast = (index) => {\r\n    // remove dom\r\n    const weatherForecast = document.getElementById(\"weatherForecast\");\r\n    deleteContent(weatherForecast);\r\n\r\n    // get weatherForecast__content\r\n    const forecastContent = getWeatherForecastDisplay(index);\r\n\r\n    // weatherForecast append\r\n    weatherForecast.appendChild(forecastContent);\r\n};\r\n\r\n// remove dom\r\nconst deleteContent = (container) => {\r\n    let child = container.lastElementChild;\r\n    while (child) {\r\n        container.removeChild(child);\r\n        child = container.lastElementChild;\r\n    }\r\n};\r\n\r\n// 取得預報詳細呈現資料\r\nconst getWeatherForecastDisplay = (index) => {\r\n    // title time\r\n    const title = createElem(\"h3\");\r\n    const startTime = new Date(forecastData[1].time[index].startTime);\r\n    title.innerHTML = getTitleTime(\r\n        startTime,\r\n        new Date(forecastData[1].time[index].endTime)\r\n    );\r\n\r\n    // weatherForecast__box--temp\r\n    const icon = getIconDisplay(\r\n        Number(forecastData[1].time[index].elementValue[1].value),\r\n        startTime\r\n    );\r\n    const temp = createElem(\"p\");\r\n    temp.innerHTML = `${Math.round(\r\n        forecastData[3].time[index].elementValue[0].value\r\n    )}°C`;\r\n    const tempBox = createElem(\"div\", \"weatherForecast__box--temp\");\r\n    tempBox.append(icon, temp);\r\n\r\n    // weatherForecast__box--other\r\n    const windIcon = createElem(\"i\");\r\n    windIcon.classList.add(\"bi\", \"bi-wind\");\r\n    const windText = createElem(\"p\");\r\n    windText.innerHTML = `${forecastData[8].time[index].elementValue[0].value} 公尺/秒`;\r\n    const waterIcon = createElem(\"i\");\r\n    waterIcon.classList.add(\"bi\", \"bi-water\");\r\n    const humidity = createElem(\"p\");\r\n    humidity.innerHTML = `${forecastData[4].time[index].elementValue[0].value}%`;\r\n    const otherBox = createElem(\"div\", \"weatherForecast__box--other\");\r\n    otherBox.append(windIcon, windText, waterIcon, humidity);\r\n\r\n    // weatherForecast__box\r\n    const forecastBox = createElem(\"div\", \"weatherForecast__box\");\r\n    forecastBox.append(tempBox, otherBox);\r\n\r\n    // description\r\n    const description = createElem(\"p\");\r\n    description.innerHTML = forecastData[6].time[index].elementValue[0].value;\r\n\r\n    // weatherForecast__content\r\n    const forecastContent = createElem(\"div\", \"weatherForecast__content\");\r\n    forecastContent.append(title, forecastBox, createElem(\"hr\"), description);\r\n\r\n    return forecastContent;\r\n};\r\n\r\n// 時間format處理\r\nconst getSimpleTime = (time) => {\r\n    return `${time.getHours().toString().padStart(2, \"0\")}:${time\r\n        .getMinutes()\r\n        .toString()\r\n        .padStart(2, \"0\")}`;\r\n};\r\n\r\n// 時間format處理\r\nconst getTitleTime = (startTime, endTime) => {\r\n    const month = (startTime.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const date = startTime.getDate().toString().padStart(2, \"0\");\r\n\r\n    return `${month}/${date} ${getSimpleTime(startTime)} ~ ${getSimpleTime(\r\n        endTime\r\n    )}`;\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../scss/style.scss\";\r\nimport { CITYDATA } from \"./constants\";\r\nimport {\r\n    loadCityOption,\r\n    updateWeatherObserve,\r\n    updateHourlyForecast,\r\n} from \"./domFunctions\";\r\nimport {\r\n    getWeatherObserveFromApi,\r\n    getHourlyForecastFromApi,\r\n} from \"./dataFunctions\";\r\n\r\n// init function\r\nconst initApp = () => {\r\n    // load button list\r\n    const selectOption = loadCityOption(CITYDATA);\r\n\r\n    // 處理city按鈕點擊\r\n    const cityBtn = document.getElementById(\"selectBox__btn\");\r\n    cityBtn.addEventListener(\"click\", toggleCity);\r\n\r\n    // 處理city選擇 listen list click\r\n    selectOption.addEventListener(\"click\", handleCitySelect);\r\n\r\n    // 處理焦點轉移 (離開city按鈕)\r\n    document.body.addEventListener(\"click\", handleBlur);\r\n\r\n    // 預設點擊\r\n    handleDefaultClick(selectOption);\r\n};\r\n\r\n// 處理city按鈕點擊 or 關閉menu\r\nconst toggleCity = () => {\r\n    const cityBtn = document.getElementById(\"selectBox__btn\");\r\n    cityBtn.classList.toggle(\"clicked\");\r\n};\r\n\r\n// listen list click\r\nconst handleCitySelect = async (event) => {\r\n    if (event.target.tagName !== \"BUTTON\") return;\r\n\r\n    const selectOption = event.currentTarget;\r\n    const allButtons = selectOption.querySelectorAll(\"button\");\r\n\r\n    // update style & get index\r\n    let selectIndex = 0;\r\n    allButtons.forEach((btn, index) => {\r\n        if (btn.classList.contains(\"selected\")) {\r\n            btn.classList.remove(\"selected\");\r\n        }\r\n\r\n        if (btn.contains(event.target)) {\r\n            // btn顯示城市名\r\n            document.getElementById(\"selectBox__city\").innerHTML =\r\n                CITYDATA[index].city;\r\n            btn.classList.add(\"selected\");\r\n            selectIndex = index;\r\n        }\r\n    });\r\n\r\n    // close menu\r\n    const cityBtn = selectOption.previousElementSibling;\r\n    if (cityBtn.classList.contains(\"clicked\")) {\r\n        toggleCity();\r\n    }\r\n\r\n    // call api update weather observe\r\n    const observeData = await getWeatherObserveFromApi(\r\n        CITYDATA[selectIndex].station\r\n    );\r\n    updateWeatherObserve(observeData);\r\n\r\n    // call api update hourly forecast\r\n    const forecastData = await getHourlyForecastFromApi(\r\n        CITYDATA[selectIndex].city\r\n    );\r\n    updateHourlyForecast(forecastData);\r\n\r\n    // save city\r\n    localStorage.setItem(\"city\", selectIndex.toString());\r\n};\r\n\r\n// 處理焦點轉移\r\nconst handleBlur = (event) => {\r\n    // city按鈕開啟 & 焦點離開\r\n    const target = event.target;\r\n    const cityBtn = document.getElementById(\"selectBox__btn\");\r\n    const selectOption = cityBtn.nextElementSibling;\r\n\r\n    if (\r\n        cityBtn.classList.contains(\"clicked\") &&\r\n        !cityBtn.contains(target) &&\r\n        !selectOption.contains(target)\r\n    ) {\r\n        toggleCity();\r\n    }\r\n};\r\n\r\n// 預設點擊\r\nconst handleDefaultClick = (selectOption) => {\r\n    const allButtons = selectOption.querySelectorAll(\"button\");\r\n\r\n    let defaultIndex = localStorage.getItem(\"city\");\r\n    if (!defaultIndex) {\r\n        defaultIndex = 0;\r\n    }\r\n\r\n    allButtons[Number(defaultIndex)].click();\r\n};\r\n\r\n// init\r\ndocument.addEventListener(\"DOMContentLoaded\", initApp);\r\n"],"names":[],"sourceRoot":""}